{"version":3,"sources":["./src/app/services/skill.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/skills/skill-details/skill-details.component.ts","./src/app/skills/skill-details/skill-details.component.html","./src/app/common/text-area/text-area.component.html","./src/app/common/text-area/text-area.component.ts","./src/app/services/busy.service.ts","./src/app/modals/modal-skill/modal-skill.component.ts","./src/app/modals/modal-skill/modal-skill.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/common/date-input/date-input.component.html","./src/app/common/date-input/date-input.component.ts","./src/app/common/text-input/text-input.component.html","./src/app/common/text-input/text-input.component.ts","./src/app/common/select-input/select-input.component.html","./src/app/common/select-input/select-input.component.ts","./src/app/app.module.ts","./src/app/skills/skill-list/skill-list.component.ts","./src/app/skills/skill-list/skill-list.component.html","./src/app/interceptors/loading.interceptor.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/services/employee.service.ts","./src/app/employees/employee-detail/employee-detail.component.ts","./src/app/employees/employee-detail/employee-detail.component.html","./src/app/modals/confirm-modal/confirm-modal.component.ts","./src/app/modals/confirm-modal/confirm-modal.component.html","./src/app/app-routing.module.ts","./src/main.ts","./src/app/employees/employee-list/employee-list.component.ts","./src/app/employees/employee-list/employee-list.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ApiResponse } from '../models/response';\nimport { SkillDetails, SkillListItem } from '../models/skill';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SkillService {\n  private baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  fetchAllSkills(): Observable<SkillListItem[]> {\n    return this.http.get<ApiResponse>(`${this.baseURL}Skill/GetAllSkills`).pipe(\n      map((response) => {\n        if (!response.isSuccess) return [];\n\n        return response.result;\n      })\n    );\n  }\n\n  fetchSkillByID(skillID: string): Observable<any> {\n    return this.http\n      .get<ApiResponse>(`${this.baseURL}Skill/GetSKill/${skillID}`)\n      .pipe(\n        map((response) => {\n          if (!response.isSuccess) return null;\n\n          return response.result;\n        })\n      );\n  }\n\n  addNewSkill(skill: SkillDetails) {\n    return this.http\n      .post<ApiResponse>(`${this.baseURL}Skill/AddNewSkill/`, skill)\n      .pipe(\n        map((response) => {\n          if (!response.isSuccess) return null;\n\n          return response.result;\n        })\n      );\n  }\n\n  updateSkill(skill: SkillDetails) {\n    return this.http\n      .put<ApiResponse>(`${this.baseURL}Skill/UpdateSkill/`, skill)\n      .pipe(\n        map((response) => {\n          if (!response.isSuccess) return null;\n\n          return response.result;\n        })\n      );\n  }\n\n  deleteSkill(skillID) {\n    return this.http\n      .delete<ApiResponse>(`${this.baseURL}Skill/DeleteSkill/${skillID}`)\n      .pipe(\n        map((response) => {\n          return response;\n        })\n      );\n  }\n\n  exportSkills() {\n    return this.http.get(`${this.baseURL}Skill/ExportSkillsToExcel`, {\n      responseType: 'blob',\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container container-styles\">\n  <div class=\"text-center\">\n    <h3>Welcome to Employee Schedule Web App</h3>\n    <p class=\"lead\">\n      Navigate through the links on navbar to view or manage the employees with\n      their respective skills or the skills used on the company\n    </p>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:7024/api/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmModalComponent } from 'src/app/modals/confirm-modal/confirm-modal.component';\nimport { SkillDetails } from 'src/app/models/skill';\nimport { SkillService } from 'src/app/services/skill.service';\n\n@Component({\n  selector: 'app-skill-details',\n  templateUrl: './skill-details.component.html',\n  styleUrls: ['./skill-details.component.css'],\n})\nexport class SkillDetailsComponent implements OnInit {\n  header: string = '';\n  skillDetailsForm: FormGroup;\n  loading: boolean;\n  skillID: string;\n  isNewSkill: boolean;\n  disableActionButton: boolean;\n  buttonTitle: string;\n  bsModalRef: BsModalRef;\n  skillTypes: any[] = [\n    { value: 1, text: 'Soft Skills' },\n    { value: 2, text: 'Technical Skills' },\n    { value: 3, text: 'Leadership Skills' },\n  ];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private service: SkillService,\n    private fb: FormBuilder,\n    private modalService: BsModalService,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.activatedRoute.params.subscribe((data) => {\n      if (data.id === 'addNewSkill') {\n        this.setAddNewSkill();\n      } else {\n        this.setExistingSkill(data.id);\n      }\n    });\n  }\n\n  setAddNewSkill() {\n    this.buttonTitle = 'Save New Skill';\n    this.header = `Add New Skill`;\n    this.isNewSkill = true;\n    this.skillDetailsForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      type: [1, Validators.required],\n    });\n    this.loading = false;\n  }\n\n  setExistingSkill(skillID: string) {\n    this.isNewSkill = false;\n    this.service.fetchSkillByID(skillID).subscribe(\n      (x) => {\n        if (x) {\n          this.skillID = x.skillID;\n          this.buttonTitle = 'Update Skill';\n          this.header = `Skill: ${x.title}`;\n          this.skillDetailsForm = this.fb.group({\n            title: [x.title, Validators.required],\n            description: [x.description, Validators.required],\n            type: [x.type, Validators.required],\n          });\n        } else {\n          this.router.navigateByUrl('/not-found');\n        }\n      },\n      () => {\n        this.router.navigateByUrl('/not-found');\n      },\n      () => {\n        this.loading = false;\n      }\n    );\n  }\n\n  deleteSkill() {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        title: 'Delete current skill',\n        content: 'Are you sure that you want to delete the current skill?',\n      },\n    };\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, config);\n    this.bsModalRef.content.closeBtnName = 'Close';\n\n    this.bsModalRef.content.deleteSelectedRecord.subscribe(() => {\n      this.service.deleteSkill(this.skillID).subscribe(\n        (result) => {\n          if (result.isSuccess) {\n            this.disableActionButton = true;\n            this.toastr.success(\n              'Skill was deleted successfully. You will be redirected to Skill List page in 2 seconds'\n            );\n            setTimeout(() => {\n              this.router.navigateByUrl('/skills');\n            }, 2000);\n          } else {\n            this.toastr.error(\n              'Skill was not deleted successfully. Please try again.'\n            );\n          }\n        },\n        () => {\n          this.toastr.error('An unexpected error occured.');\n        }\n      );\n    });\n  }\n\n  saveSkill() {\n    if (this.isNewSkill) this.addNewSkill();\n    else this.updateCurrentSkill();\n  }\n\n  addNewSkill() {\n    const skillObject: SkillDetails = {\n      skillID: null,\n      title: this.skillDetailsForm.value['title'],\n      description: this.skillDetailsForm.value['description'],\n      type: Number(this.skillDetailsForm.value['type']),\n    };\n\n    this.service.addNewSkill(skillObject).subscribe(\n      (result) => {\n        if (result) {\n          this.disableActionButton = true;\n          this.toastr.success(\n            'Skill was added successfully. You will be redirected to Skill List page in 2 seconds'\n          );\n          setTimeout(() => {\n            this.router.navigateByUrl('/skills');\n          }, 2000);\n        } else {\n          this.toastr.error(\n            'Skill was not added successfully. Please try again.'\n          );\n        }\n      },\n      () => {\n        this.toastr.error('An unexpected error occured.');\n      }\n    );\n  }\n\n  updateCurrentSkill() {\n    const skillObject: SkillDetails = {\n      skillID: this.skillID,\n      title: this.skillDetailsForm.value['title'],\n      description: this.skillDetailsForm.value['description'],\n      type: Number(this.skillDetailsForm.value['type']),\n    };\n\n    this.service.updateSkill(skillObject).subscribe(\n      (result) => {\n        if (result) {\n          this.toastr.success('Skill was updated successfully.');\n        } else {\n          this.toastr.error(\n            'Skill was not updated successfully. Please try again.'\n          );\n        }\n      },\n      () => {\n        this.toastr.error('An unexpected error occured.');\n      }\n    );\n  }\n}\n","<div class=\"card\" *ngIf=\"!loading\">\n  <h5 class=\"card-header\">{{ header }}</h5>\n  <div class=\"card-body\">\n    <form\n      #form=\"ngForm\"\n      class=\"form-inline mb-3\"\n      (ngSubmit)=\"saveSkill()\"\n      autocomplete=\"off\"\n    >\n      <app-text-input\n        class=\"text-input-responsive\"\n        [inputID]=\"'title'\"\n        [formControl]=\"skillDetailsForm.controls['title']\"\n        [label]=\"'Title'\"\n      ></app-text-input>\n      <app-select-input\n        class=\"select-input-responsive\"\n        [inputID]=\"'type'\"\n        [formControl]=\"skillDetailsForm.controls['type']\"\n        [label]=\"'Skill Type'\"\n        [listItems]=\"skillTypes\"\n      ></app-select-input>\n      <app-text-area\n        class=\"form-group-textarea-styles\"\n        [inputID]=\"'description'\"\n        [formControl]=\"skillDetailsForm.controls['description']\"\n        [label]=\"'Description'\"\n      ></app-text-area>\n      <div class=\"submit-button-container\">\n        <button\n          [disabled]=\"!skillDetailsForm.valid || disableActionButton\"\n          class=\"btn btn-success submit-button-styles\"\n          type=\"submit\"\n        >\n          {{ buttonTitle }}\n        </button>\n        <button\n          *ngIf=\"!isNewSkill\"\n          [disabled]=\"disableActionButton\"\n          class=\"btn btn-danger submit-button-styles ml-4\"\n          type=\"button\"\n          (click)=\"deleteSkill()\"\n        >\n          Delete Skill\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"form-group-styles\">\r\n  <label for=\"{{ inputID }}\">{{ label }}</label>\r\n  <textarea\r\n    id=\"{{ inputID }}\"\r\n    [class.is-invalid]=\"ngControl.invalid && ngControl.touched\"\r\n    class=\"form-control\"\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n    rows=\"{{ rows }}\"\r\n  ></textarea>\r\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\r\n    {{ label }} is required\r\n  </div>\r\n</div>\r\n","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-area',\r\n  templateUrl: './text-area.component.html',\r\n  styleUrls: ['../input-style.css'],\r\n})\r\nexport class TextAreaComponent implements ControlValueAccessor {\r\n  @Input() inputID: string;\r\n  @Input() label: string;\r\n  @Input() rows = 5;\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {}\r\n\r\n  registerOnChange(fn: any): void {}\r\n\r\n  registerOnTouched(fn: any): void {}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) {}\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-party',\n      bdColor: 'rgba(0, 0, 0, 0.8)',\n      color: '#fff',\n    });\n  }\n\n  idle() {\n    this.busyRequestCount--;\n    if (this.busyRequestCount <= 0) {\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { SkillListItem } from 'src/app/models/skill';\nimport { SkillService } from 'src/app/services/skill.service';\n\n@Component({\n  selector: 'app-modal-skill',\n  templateUrl: './modal-skill.component.html',\n  styleUrls: ['./modal-skill.component.css'],\n})\nexport class ModalSkillComponent implements OnInit {\n  @Input() addExistingSkill = new EventEmitter();\n  @Input() addNewSkill = new EventEmitter();\n  requiredAction: string;\n  skillIDs: string[];\n  skills: SkillListItem[] = [];\n  skillDetailsForm: FormGroup;\n  isNewEmployee: boolean;\n  skillTypes: any[] = [\n    { value: 1, text: 'Soft Skills' },\n    { value: 2, text: 'Technical Skills' },\n    { value: 3, text: 'Leadership Skills' },\n  ];\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private service: SkillService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.skillDetailsForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      type: [1, Validators.required],\n    });\n\n    this.requiredAction = this.isNewEmployee\n      ? 'Save New Employee'\n      : 'Update Employee';\n\n    this.service.fetchAllSkills().subscribe((list) => {\n      this.skills = list.filter((x) => {\n        return this.skillIDs.indexOf(x.skillID) === -1;\n      });\n    });\n  }\n\n  getSkillType(type: number) {\n    switch (type) {\n      case 1:\n        return 'Soft Skills';\n      case 2:\n        return 'Technical Skills';\n      case 3:\n        return 'Leadership Skills';\n      default:\n        return '';\n    }\n  }\n\n  onAddNewSkill() {\n    const skill = { ...this.skillDetailsForm.value };\n    this.addNewSkill.emit(skill);\n    this.bsModalRef.hide();\n  }\n\n  onAddExistingSkill(skill) {\n    this.addExistingSkill.emit(skill);\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Add new skill</h4>\n  <button\n    type=\"button\"\n    class=\"btn-close close pull-right\"\n    aria-label=\"Close\"\n    (click)=\"bsModalRef.hide()\"\n  >\n    <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <p>\n    You can either add an existing skill or create a new one. In any case after\n    adding a new skill to the employee, you should press\n    <span class=\"required-action\">{{ requiredAction }}</span\n    >. Otherwise the change won't be saved.\n  </p>\n  <div>\n    <form\n      #form=\"ngForm\"\n      class=\"form-inline mb-3\"\n      (ngSubmit)=\"onAddNewSkill()\"\n      autocomplete=\"off\"\n    >\n      <app-text-input\n        [inputID]=\"'title'\"\n        [formControl]=\"skillDetailsForm.controls['title']\"\n        [label]=\"'Title'\"\n      ></app-text-input>\n      <app-select-input\n        [inputID]=\"'type'\"\n        [formControl]=\"skillDetailsForm.controls['type']\"\n        [label]=\"'Skill Type'\"\n        [listItems]=\"skillTypes\"\n      ></app-select-input>\n      <app-text-area\n        class=\"text-area-description\"\n        [inputID]=\"'description'\"\n        [formControl]=\"skillDetailsForm.controls['description']\"\n        [label]=\"'Description'\"\n        [rows]=\"2\"\n      ></app-text-area>\n      <div class=\"submit-button-container\">\n        <button\n          [disabled]=\"!skillDetailsForm.valid\"\n          class=\"btn btn-success submit-button-styles\"\n          type=\"submit\"\n        >\n          Add New Skill\n        </button>\n      </div>\n    </form>\n  </div>\n  <div>\n    <div>\n      <h5>Existing skills</h5>\n    </div>\n    <div class=\"results-table-styles\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Skill Name</th>\n            <th scope=\"col\">Type</th>\n            <th scope=\"col\">Select</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngIf=\"skills.length == 0\">\n            <td class=\"text-center\" colspan=\"5\">There are no skills</td>\n          </tr>\n          <ng-container *ngIf=\"skills.length > 0\">\n            <tr *ngFor=\"let skill of skills\">\n              <td>{{ skill.title }}</td>\n              <td>{{ getSkillType(skill.type) }}</td>\n              <td>\n                <button\n                  class=\"btn btn-success employee-action-button\"\n                  (click)=\"onAddExistingSkill(skill)\"\n                >\n                  <i class=\"fa fa-check\"></i>\n                </button>\n              </td>\n            </tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"results-grid-styles\">\n      <div class=\"text-center\" *ngIf=\"skills.length == 0\">\n        There are no skills\n      </div>\n      <div class=\"row\" *ngIf=\"skills.length > 0\">\n        <div\n          class=\"col-sm-6 col-xs-12 padding-col-styles\"\n          *ngFor=\"let skill of skills\"\n        >\n          <div class=\"card card-list-item\">\n            <div class=\"card-header\">\n              {{ skill.title }}\n            </div>\n            <div class=\"card-body\">\n              <h6 class=\"card-subtitle mb-2 text-muted\">\n                Type {{ getSkillType(skill.type) }}\n              </h6>\n              <button\n                (click)=\"onAddExistingSkill(skill)\"\n                type=\"button\"\n                class=\"btn btn-link remove-link\"\n              >\n                Add existing skill\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n    Cancel\n  </button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Client';\n}\n","<ngx-spinner>\n  <h3 class=\"spinner-text\">Loading...</h3>\n</ngx-spinner>\n\n<app-nav></app-nav>\n\n<div class=\"container application-container\">\n  <router-outlet></router-outlet>\n</div>\n","<div class=\"form-group-styles\">\r\n  <label for=\"{{ inputID }}\">{{ label }}</label>\r\n  <input\r\n    id=\"{{ inputID }}\"\r\n    type=\"text\"\r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    class=\"form-control\"\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n    bsDatepicker\r\n    [bsConfig]=\"bsConfig\"\r\n  />\r\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\r\n    {{ label }} is required\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.isLater\" class=\"invalid-feedback\">\r\n    Provide an earlier date\r\n  </div>\r\n  <div *ngIf=\"ngControl.control.errors?.isEarlier\" class=\"invalid-feedback\">\r\n    Provide a later date\r\n  </div>\r\n</div>\r\n","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['../input-style.css'],\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() inputID: string;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY',\r\n    };\r\n  }\r\n\r\n  writeValue(obj: any): void {}\r\n\r\n  registerOnChange(fn: any): void {}\r\n\r\n  registerOnTouched(fn: any): void {}\r\n}\r\n","<div class=\"form-group-styles\">\r\n  <label for=\"{{ inputID }}\">{{ label }}</label>\r\n  <input\r\n    id=\"{{ inputID }}\"\r\n    [class.is-invalid]=\"ngControl.invalid && ngControl.touched\"\r\n    type=\"{{ type }}\"\r\n    class=\"form-control\"\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n  />\r\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\r\n    {{ label }} is required\r\n  </div>\r\n</div>\r\n","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['../input-style.css'],\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() inputID: string;\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {}\r\n\r\n  registerOnChange(fn: any): void {}\r\n\r\n  registerOnTouched(fn: any): void {}\r\n}\r\n","<div class=\"form-group-styles\">\r\n  <label for=\"{{ inputID }}\">{{ label }}</label>\r\n  <select\r\n    [class.is-invalid]=\"ngControl.invalid && ngControl.touched\"\r\n    class=\"form-control\"\r\n    id=\"{{ inputID }}\"\r\n    [formControl]=\"ngControl.control\"\r\n  >\r\n    <option *ngFor=\"let item of listItems\" [value]=\"item.value\">\r\n      {{ item.text }}\r\n    </option>\r\n  </select>\r\n</div>\r\n","import { Component, Input, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-select-input',\r\n  templateUrl: './select-input.component.html',\r\n  styleUrls: ['../input-style.css'],\r\n})\r\nexport class SelectInputComponent implements ControlValueAccessor {\r\n  @Input() inputID: string;\r\n  @Input() label: string;\r\n  @Input() listItems: any[] = [];\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {}\r\n\r\n  registerOnChange(fn: any): void {}\r\n\r\n  registerOnTouched(fn: any): void {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component';\r\nimport { EmployeeDetailComponent } from './employees/employee-detail/employee-detail.component';\r\nimport { SkillListComponent } from './skills/skill-list/skill-list.component';\r\nimport { SkillDetailsComponent } from './skills/skill-details/skill-details.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { LoadingInterceptor } from './interceptors/loading.interceptor';\r\nimport { DateInputComponent } from './common/date-input/date-input.component';\r\nimport { TextInputComponent } from './common/text-input/text-input.component';\r\nimport { SelectInputComponent } from './common/select-input/select-input.component';\r\nimport { TextAreaComponent } from './common/text-area/text-area.component';\r\nimport { ConfirmModalComponent } from './modals/confirm-modal/confirm-modal.component';\nimport { ModalSkillComponent } from './modals/modal-skill/modal-skill.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    EmployeeListComponent,\r\n    EmployeeDetailComponent,\r\n    SkillListComponent,\r\n    SkillDetailsComponent,\r\n    NotFoundComponent,\r\n    DateInputComponent,\r\n    TextInputComponent,\r\n    SelectInputComponent,\r\n    TextAreaComponent,\r\n    ConfirmModalComponent,\r\n    ModalSkillComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    NgxSpinnerModule,\r\n    ReactiveFormsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right',\r\n    }),\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { SkillListItem } from 'src/app/models/skill';\nimport { SkillService } from 'src/app/services/skill.service';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-skill-list',\n  templateUrl: './skill-list.component.html',\n  styleUrls: ['./skill-list.component.css'],\n})\nexport class SkillListComponent implements OnInit {\n  loading: boolean;\n  skills: SkillListItem[] = [];\n\n  constructor(private service: SkillService) {}\n\n  ngOnInit(): void {\n    this.loadSkills();\n  }\n\n  loadSkills() {\n    this.loading = true;\n    this.service.fetchAllSkills().subscribe(\n      (list) => {\n        this.skills = list;\n      },\n      () => {\n        this.skills = [];\n      },\n      () => {\n        this.loading = false;\n      }\n    );\n  }\n\n  exportSkills() {\n    this.service.exportSkills().subscribe((result) => {\n      let downloadLink = document.createElement('a');\n      downloadLink.target = '_blank';\n      downloadLink.href = window.URL.createObjectURL(result);\n      const formattedDate = formatDate(new Date(), 'yyyyMMddhhmmss', 'en-US');\n      downloadLink.setAttribute(\n        'download',\n        `CurrentSkills_${formattedDate}.xlsx`\n      );\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    });\n  }\n\n  getSkillType(type: number) {\n    switch (type) {\n      case 1:\n        return 'Soft Skills';\n      case 2:\n        return 'Technical Skills';\n      case 3:\n        return 'Leadership Skills';\n      default:\n        return '';\n    }\n  }\n}\n","<div class=\"container container-styles\" *ngIf=\"!loading\">\n  <h3>Skills list</h3>\n  <p>All the available skills that the employees can possess.</p>\n  <div class=\"text-left mb-4 mt-2\" *ngIf=\"!loading && skills.length > 0\">\n    {{\n      skills.length +\n        (skills.length == 1\n          ? \" skill has been found\"\n          : \" skills have been found\")\n    }}\n  </div>\n  <div class=\"add-skill-button-styles\">\n    <button class=\"btn btn-info mr-2\" type=\"button\" (click)=\"exportSkills()\">\n      Export skills\n    </button>\n    <button\n      class=\"btn btn-success\"\n      type=\"button\"\n      [routerLink]=\"'/skills/addNewSkill'\"\n    >\n      Add New Skill\n    </button>\n  </div>\n  <div class=\"results-table-styles\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Skill Name</th>\n          <th scope=\"col\">Created at</th>\n          <th scope=\"col\">Type</th>\n          <th scope=\"col\">View</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngIf=\"skills.length == 0\">\n          <td class=\"text-center\" colspan=\"5\">There are no skills</td>\n        </tr>\n        <ng-container *ngIf=\"skills.length > 0\">\n          <tr *ngFor=\"let skill of skills\">\n            <td>{{ skill.title }}</td>\n            <td>{{ skill.createDate | date: \"dd/MM/YYYY\" }}</td>\n            <td>{{ getSkillType(skill.type) }}</td>\n            <td>\n              <button\n                class=\"btn btn-primary employee-action-button\"\n                [routerLink]=\"'/skills/' + skill.skillID\"\n              >\n                <i class=\"fa fa-edit\"></i>\n              </button>\n            </td>\n          </tr>\n        </ng-container>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"results-grid-styles\">\n    <div class=\"text-center\" *ngIf=\"skills.length == 0\">\n      There are no skills\n    </div>\n    <div class=\"row\" *ngIf=\"skills.length > 0\">\n      <div\n        class=\"col-sm-6 col-xs-12 padding-col-styles\"\n        *ngFor=\"let skill of skills\"\n      >\n        <div class=\"card card-list-item\">\n          <div class=\"card-header\">Skill: {{ skill.title }}</div>\n          <div class=\"card-body\">\n            <h6 class=\"card-subtitle mb-2\">\n              Type: {{ getSkillType(skill.type) }}\n            </h6>\n            <h6 class=\"card-subtitle mb-2 text-muted\">\n              Created on {{ skill.createDate | date: \"dd/MM/YYYY\" }}\n            </h6>\n            <a [href]=\"'/skills/' + skill.skillID\" class=\"card-link\"\n              >View Details</a\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(private busyService: BusyService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n    return next.handle(request).pipe(\n      delay(1000),\n      finalize(() => {\n        this.busyService.idle();\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand header-link\" routerLink=\"/\" routerLinkActive=\"active\"\n      >Employee Scheduler</a\n    >\n    <ul class=\"navbar-nav me-auto mb-2 mb-md-0 menu-items\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/employees\" routerLinkActive=\"active\"\n          >Employees</a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/skills\" routerLinkActive=\"active\"\n          >Skills</a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container text-center\">\n  <h5>\n    The requested resource that you searched for does not exist. Click the\n    button below to return to homepage or use the links on navbar to navigate to\n    the available pages.\n  </h5>\n  <button class=\"btn btn-info mt-2\" routerLink=\"/\">Return to Home page</button>\n</div>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { EmployeeDetails, EmployeeListItem } from '../models/employees';\nimport { ApiResponse } from '../models/response';\nimport { Filter } from '../models/filters';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmployeeService {\n  private baseURL = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  fetchAllEmployees(filters: Filter): Observable<any> {\n    return this.http\n      .get<ApiResponse>(\n        `${\n          this.baseURL\n        }Employee/GetAllEmployees?searchValue=${filters.searchValue.toString()}&sortColumn=${filters.sortColumn.toString()}&sortDirection=${filters.sortDirection.toString()}`\n      )\n      .pipe(\n        map((response) => {\n          if (!response.isSuccess) return [];\n\n          return response.result.map((x) => {\n            return {\n              checked: false,\n              ...x,\n            };\n          });\n        })\n      );\n  }\n\n  fetchEmployeeByID(employeeID: string): Observable<any> {\n    return this.http\n      .get<ApiResponse>(`${this.baseURL}Employee/GetEmployee/${employeeID}`)\n      .pipe(\n        map((response) => {\n          if (!response.isSuccess) return null;\n\n          return response.result;\n        })\n      );\n  }\n\n  addNewEmployee(employee: EmployeeDetails) {\n    return this.http\n      .post<ApiResponse>(`${this.baseURL}Employee/AddNewEmployee/`, employee)\n      .pipe(\n        map((response) => {\n          if (!response.isSuccess) return null;\n\n          return response.result;\n        })\n      );\n  }\n\n  updateEmployee(employee: EmployeeDetails) {\n    return this.http\n      .put<ApiResponse>(`${this.baseURL}Employee/UpdateEmployee/`, employee)\n      .pipe(\n        map((response) => {\n          if (!response.isSuccess) return null;\n\n          return response.result;\n        })\n      );\n  }\n\n  deleteMultipleEmployees(employeeIDs: string[]): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n      body: employeeIDs,\n    };\n\n    return this.http\n      .delete<ApiResponse>(\n        `${this.baseURL}Employee/DeleteMultipleEmployees`,\n        httpOptions\n      )\n      .pipe(\n        map((response) => {\n          return response.isSuccess;\n        })\n      );\n  }\n\n  deleteEmployee(employeeID: string) {\n    return this.http\n      .delete<ApiResponse>(\n        `${this.baseURL}Employee/DeleteEmployee/${employeeID}`\n      )\n      .pipe(\n        map((response) => {\n          return response;\n        })\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { ConfirmModalComponent } from 'src/app/modals/confirm-modal/confirm-modal.component';\nimport { ModalSkillComponent } from 'src/app/modals/modal-skill/modal-skill.component';\nimport { EmployeeDetails, EmployeeSkills } from 'src/app/models/employees';\nimport { EmployeeService } from 'src/app/services/employee.service';\n\n@Component({\n  selector: 'app-employee-detail',\n  templateUrl: './employee-detail.component.html',\n  styleUrls: ['./employee-detail.component.css'],\n})\nexport class EmployeeDetailComponent implements OnInit {\n  header: string = '';\n  employeeDetailsForm: FormGroup;\n  bsModalRef: BsModalRef;\n  skillModalRef: BsModalRef;\n  employeeID: string;\n  loading: boolean;\n  disableActionButton: boolean;\n  employeeSkills: EmployeeSkills[];\n  employmentTypes: any[] = [\n    { value: 1, text: 'Full Time' },\n    { value: 2, text: 'Part Time' },\n    { value: 3, text: 'Temporary' },\n    { value: 4, text: 'Internship' },\n  ];\n  isNewEmployee: boolean;\n  buttonTitle: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private service: EmployeeService,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.activatedRoute.params.subscribe((data) => {\n      if (data.id === 'addNewEmployee') {\n        this.setAddNewEmployee();\n      } else {\n        this.setExistingEmployee(data.id);\n      }\n    });\n  }\n\n  checkLaterDate(dateParam: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (!control?.parent?.controls[dateParam].value) return null;\n\n      return control?.value <= control?.parent?.controls[dateParam].value\n        ? null\n        : { isLater: true };\n    };\n  }\n\n  setAddNewEmployee() {\n    this.buttonTitle = 'Save New Employee';\n    this.header = `Add New Employee`;\n    this.isNewEmployee = true;\n    this.employeeDetailsForm = this.fb.group({\n      FirstName: ['', Validators.required],\n      LastName: ['', Validators.required],\n      Email: ['', [Validators.required, Validators.email]],\n      DateOfBirth: [\n        '',\n        [Validators.required, this.checkLaterDate('HiringDate')],\n      ],\n      HiringDate: ['', Validators.required],\n      EmploymentType: [1, Validators.required],\n      JobTitle: ['', Validators.required],\n    });\n    this.employeeDetailsForm.controls.HiringDate.valueChanges.subscribe(() => {\n      this.employeeDetailsForm.controls.DateOfBirth.updateValueAndValidity();\n    });\n    this.employeeSkills = [];\n    this.loading = false;\n  }\n\n  setExistingEmployee(employeeID: string) {\n    this.isNewEmployee = false;\n    this.service.fetchEmployeeByID(employeeID).subscribe(\n      (x) => {\n        if (x) {\n          this.employeeID = employeeID;\n          this.buttonTitle = 'Update Employee';\n          this.header = `Employee ${x.firstName} ${x.lastName}`;\n          this.employeeDetailsForm = this.fb.group({\n            FirstName: [x.firstName, Validators.required],\n            LastName: [x.lastName, Validators.required],\n            Email: [x.email, [Validators.required, Validators.email]],\n            DateOfBirth: [\n              new Date(x.dateOfBirth),\n              [Validators.required, this.checkLaterDate('HiringDate')],\n            ],\n            HiringDate: [new Date(x.hiringDate), Validators.required],\n            EmploymentType: [x.employeeType, Validators.required],\n            JobTitle: [x.jobTitle, Validators.required],\n          });\n          this.employeeDetailsForm.controls.HiringDate.valueChanges.subscribe(\n            () => {\n              this.employeeDetailsForm.controls.DateOfBirth.updateValueAndValidity();\n            }\n          );\n          this.employeeSkills = x.skills.map((y) => {\n            return {\n              skillID: y.skill.skillID,\n              skill: {\n                skillID: y.skill.skillID,\n                title: y.skill.title,\n                description: y.skill.description,\n                type: y.skill.type,\n              },\n            };\n          });\n        } else {\n          this.router.navigateByUrl('/not-found');\n        }\n      },\n      () => {\n        this.router.navigateByUrl('/not-found');\n      },\n      () => {\n        this.loading = false;\n      }\n    );\n  }\n\n  addNewSkill() {\n    const config = {\n      class: 'modal-lg',\n      initialState: {\n        skillIDs: this.employeeSkills\n          .filter((x) => x.skillID !== null)\n          .map((x) => x.skillID),\n        isNewEmployee: this.isNewEmployee,\n      },\n    };\n    this.skillModalRef = this.modalService.show(ModalSkillComponent, config);\n\n    this.skillModalRef.content.addExistingSkill.subscribe((skill) => {\n      this.employeeSkills.push({\n        skillID: skill.skillID,\n        skill: {\n          skillID: null,\n          title: skill.title,\n          description: skill.description,\n          type: skill.type,\n        },\n      });\n    });\n\n    this.skillModalRef.content.addNewSkill.subscribe((skill) => {\n      this.employeeSkills.push({\n        skillID: null,\n        skill: {\n          skillID: null,\n          title: skill.title,\n          description: skill.description,\n          type: Number(skill.type),\n        },\n      });\n    });\n  }\n\n  removeSkill(index: number) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        title: 'Remove skill',\n        content: 'Are you sure that you want to remove the selected skill?',\n      },\n    };\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, config);\n    this.bsModalRef.content.closeBtnName = 'No';\n    this.bsModalRef.content.confirmButtonName = 'Yes';\n\n    this.bsModalRef.content.deleteSelectedRecord.subscribe(() => {\n      this.employeeSkills.splice(index, 1);\n    });\n  }\n\n  deleteEmployee() {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        title: 'Delete current employee',\n        content: 'Are you sure that you want to delete the current employee?',\n      },\n    };\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, config);\n    this.bsModalRef.content.closeBtnName = 'Close';\n\n    this.bsModalRef.content.deleteSelectedRecord.subscribe(() => {\n      this.service.deleteEmployee(this.employeeID).subscribe(\n        (result) => {\n          if (result.isSuccess) {\n            this.disableActionButton = true;\n            this.toastr.success(\n              'Employee was deleted successfully. You will be redirected to Employee List page in 2 seconds'\n            );\n            setTimeout(() => {\n              this.router.navigateByUrl('/employees');\n            }, 2000);\n          } else {\n            this.toastr.error(\n              'Employee was not deleted successfully. Please try again.'\n            );\n          }\n        },\n        () => {\n          this.toastr.error('An unexpected error occured.');\n        }\n      );\n    });\n  }\n\n  saveEmployee() {\n    if (this.isNewEmployee) this.addNewEmployee();\n    else this.updateCurrentEmployee();\n  }\n\n  addNewEmployee() {\n    const employeeObject: EmployeeDetails = {\n      employeeID: null,\n      firstName: this.employeeDetailsForm.value['FirstName'],\n      lastName: this.employeeDetailsForm.value['LastName'],\n      email: this.employeeDetailsForm.value['Email'],\n      dateOfBirth: this.employeeDetailsForm.value['DateOfBirth'],\n      hiringDate: this.employeeDetailsForm.value['HiringDate'],\n      employeeType: Number(this.employeeDetailsForm.value['EmploymentType']),\n      jobTitle: this.employeeDetailsForm.value['JobTitle'],\n      skills: this.employeeSkills,\n    };\n\n    this.service.addNewEmployee(employeeObject).subscribe(\n      (result) => {\n        if (result) {\n          this.disableActionButton = true;\n          this.toastr.success(\n            'Employee was added successfully. You will be redirected to Employee List page in 2 seconds'\n          );\n          setTimeout(() => {\n            this.router.navigateByUrl('/employees');\n          }, 2000);\n        } else {\n          this.toastr.error(\n            'Employee was not added successfully. Please try again.'\n          );\n        }\n      },\n      () => {\n        this.toastr.error('An unexpected error occured.');\n      }\n    );\n  }\n\n  updateCurrentEmployee() {\n    const employeeObject: EmployeeDetails = {\n      employeeID: this.employeeID,\n      firstName: this.employeeDetailsForm.value['FirstName'],\n      lastName: this.employeeDetailsForm.value['LastName'],\n      email: this.employeeDetailsForm.value['Email'],\n      dateOfBirth: this.employeeDetailsForm.value['DateOfBirth'],\n      hiringDate: this.employeeDetailsForm.value['HiringDate'],\n      employeeType: Number(this.employeeDetailsForm.value['EmploymentType']),\n      jobTitle: this.employeeDetailsForm.value['JobTitle'],\n      skills: this.employeeSkills,\n    };\n\n    this.service.updateEmployee(employeeObject).subscribe(\n      (result) => {\n        if (result) {\n          this.toastr.success('Employee was updated successfully.');\n        } else {\n          this.toastr.error(\n            'Employee was not added successfully. Please try again.'\n          );\n        }\n      },\n      () => {\n        this.toastr.error('An unexpected error occured.');\n      }\n    );\n  }\n\n  getSkillType(type: number) {\n    switch (type) {\n      case 1:\n        return 'Soft Skills';\n      case 2:\n        return 'Technical Skills';\n      case 3:\n        return 'Leadership Skills';\n      default:\n        return '';\n    }\n  }\n}\n","<div class=\"card employee-card-styles\" *ngIf=\"!loading\">\n  <h5 class=\"card-header\">{{ header }}</h5>\n  <div class=\"card-body\">\n    <form\n      #form=\"ngForm\"\n      class=\"form-inline mb-3\"\n      (ngSubmit)=\"saveEmployee()\"\n      autocomplete=\"off\"\n    >\n      <app-text-input\n        [inputID]=\"'FirstName'\"\n        [formControl]=\"employeeDetailsForm.controls['FirstName']\"\n        [label]=\"'First Name'\"\n      ></app-text-input>\n      <app-text-input\n        [inputID]=\"'LastName'\"\n        [formControl]=\"employeeDetailsForm.controls['LastName']\"\n        [label]=\"'Last Name'\"\n      ></app-text-input>\n      <app-text-input\n        [inputID]=\"'Email'\"\n        [formControl]=\"employeeDetailsForm.controls['Email']\"\n        [label]=\"'Email'\"\n        type=\"email\"\n      ></app-text-input>\n      <app-text-input\n        [inputID]=\"'JobTitle'\"\n        [formControl]=\"employeeDetailsForm.controls['JobTitle']\"\n        [label]=\"'Job Title'\"\n      ></app-text-input>\n      <app-date-input\n        [inputID]=\"'DateOfBirth'\"\n        [formControl]=\"employeeDetailsForm.controls['DateOfBirth']\"\n        [label]=\"'Date Of Birth'\"\n      ></app-date-input>\n      <app-date-input\n        [inputID]=\"'HiringDate'\"\n        [formControl]=\"employeeDetailsForm.controls['HiringDate']\"\n        [label]=\"'Hiring date'\"\n      ></app-date-input>\n      <app-select-input\n        [inputID]=\"'EmploymentType'\"\n        [formControl]=\"employeeDetailsForm.controls['EmploymentType']\"\n        [label]=\"'Employment Type'\"\n        [listItems]=\"employmentTypes\"\n      ></app-select-input>\n      <div class=\"employee-skillset-container\">\n        <div class=\"skill-set-details\">\n          <div class=\"title-styles\">\n            <h5>Employee's current skillset</h5>\n          </div>\n          <div>\n            <button class=\"btn btn-info\" type=\"button\" (click)=\"addNewSkill()\">\n              Add new skill\n            </button>\n          </div>\n        </div>\n        <div class=\"results-table-styles\">\n          <table class=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Type</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngIf=\"employeeSkills.length == 0\">\n                <td class=\"text-center\" colspan=\"5\">Employee has no skills</td>\n              </tr>\n              <ng-container *ngIf=\"employeeSkills.length > 0\">\n                <tr *ngFor=\"let skill of employeeSkills; let i = index\">\n                  <td>{{ skill.skill.title }}</td>\n                  <td>{{ getSkillType(skill.skill.type) }}</td>\n                  <td>\n                    <button\n                      class=\"btn btn-primary employee-action-button\"\n                      type=\"button\"\n                      (click)=\"removeSkill(i)\"\n                    >\n                      <i class=\"fa fa-trash\"></i>\n                    </button>\n                  </td>\n                </tr>\n              </ng-container>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"results-grid-styles\">\n          <div class=\"text-center\" *ngIf=\"employeeSkills.length == 0\">\n            Employee has no skills\n          </div>\n          <div class=\"row\" *ngIf=\"employeeSkills.length > 0\">\n            <div\n              class=\"col-sm-6 col-xs-12 padding-col-styles\"\n              *ngFor=\"let skill of employeeSkills\"\n            >\n              <div class=\"card card-list-item\">\n                <div class=\"card-header\">\n                  {{ skill.skill.title }}\n                </div>\n                <div class=\"card-body\">\n                  <h6 class=\"card-subtitle mb-2 text-muted\">\n                    Type {{ getSkillType(skill.skill.type) }}\n                  </h6>\n                  <button\n                    (click)=\"removeSkill(i)\"\n                    type=\"button\"\n                    class=\"btn btn-link remove-link\"\n                  >\n                    Remove skill\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"submit-button-container\">\n        <button\n          [disabled]=\"!employeeDetailsForm.valid || disableActionButton\"\n          class=\"btn btn-success submit-button-styles\"\n          type=\"submit\"\n        >\n          {{ buttonTitle }}\n        </button>\n        <button\n          *ngIf=\"!isNewEmployee\"\n          [disabled]=\"disableActionButton\"\n          class=\"btn btn-danger submit-button-styles ml-4\"\n          type=\"button\"\n          (click)=\"deleteEmployee()\"\n        >\n          Delete Employee\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.css'],\n})\nexport class ConfirmModalComponent implements OnInit {\n  @Input() deleteSelectedRecord = new EventEmitter();\n  title: string;\n  closeBtnName: string;\n  confirmButtonName: string = 'Delete';\n  content: string;\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  onDeleteRecord() {\n    this.deleteSelectedRecord.emit();\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ title }}</h4>\n  <button\n    type=\"button\"\n    class=\"btn-close close pull-right\"\n    aria-label=\"Close\"\n    (click)=\"bsModalRef.hide()\"\n  >\n    <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">{{ content }}</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\n    {{ closeBtnName }}\n  </button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"onDeleteRecord()\">\n    {{ confirmButtonName }}\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmployeeDetailComponent } from './employees/employee-detail/employee-detail.component';\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component';\nimport { HomeComponent } from './home/home.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SkillDetailsComponent } from './skills/skill-details/skill-details.component';\nimport { SkillListComponent } from './skills/skill-list/skill-list.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'employees', component: EmployeeListComponent },\n  { path: 'employees/:id', component: EmployeeDetailComponent },\n  { path: 'employees/addNewEmployee', component: EmployeeDetailComponent },\n  { path: 'skills', component: SkillListComponent },\n  { path: 'skills/:id', component: SkillDetailsComponent },\n  { path: 'skills/addNewSkill', component: SkillDetailsComponent },\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfirmModalComponent } from 'src/app/modals/confirm-modal/confirm-modal.component';\nimport { EmployeeListItem } from 'src/app/models/employees';\nimport { Filter } from 'src/app/models/filters';\nimport { EmployeeService } from 'src/app/services/employee.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css'],\n})\nexport class EmployeeListComponent implements OnInit {\n  loading: boolean;\n  bsModalRef: BsModalRef;\n  filterValue: Filter = {\n    searchValue: '',\n    sortColumn: '',\n    sortDirection: '',\n  };\n  employeeList: EmployeeListItem[] = [];\n  toastr: any;\n\n  constructor(\n    private service: EmployeeService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadEmployees(true);\n  }\n\n  loadEmployees(avoidLoading: boolean) {\n    if (avoidLoading) this.loading = true;\n    this.service.fetchAllEmployees(this.filterValue).subscribe(\n      (list) => {\n        this.employeeList = list;\n      },\n      () => {\n        this.employeeList = [];\n      },\n      () => {\n        if (avoidLoading) this.loading = false;\n      }\n    );\n  }\n\n  orderBy(column: string) {\n    if (this.filterValue.sortColumn === column) {\n      if (this.filterValue.sortDirection === 'ASC')\n        this.filterValue.sortDirection = 'DESC';\n      else if (this.filterValue.sortDirection === 'DESC')\n        this.filterValue.sortDirection = 'ASC';\n      else this.filterValue.sortDirection = 'DESC';\n    } else {\n      this.filterValue.sortColumn = column;\n      this.filterValue.sortDirection = 'ASC';\n    }\n\n    this.loadEmployees(false);\n  }\n\n  submitSearch() {\n    this.loadEmployees(false);\n  }\n\n  resetFilters() {\n    this.filterValue.sortColumn = '';\n    this.filterValue.sortDirection = '';\n    this.filterValue.searchValue = '';\n    this.loadEmployees(false);\n  }\n\n  deleteMultipleEmployees() {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        title: 'Delete selected employees',\n        content: 'Are you sure that you want to delete the selected employees?',\n      },\n    };\n    this.bsModalRef = this.modalService.show(ConfirmModalComponent, config);\n    this.bsModalRef.content.closeBtnName = 'Close';\n\n    this.bsModalRef.content.deleteSelectedRecord.subscribe(() => {\n      const selectedEmployeeIDs = this.employeeList\n        .filter((x) => x.checked)\n        .map((x) => x.employeeID);\n\n      this.service.deleteMultipleEmployees(selectedEmployeeIDs).subscribe(\n        (result) => {\n          if (result) {\n            this.employeeList = this.employeeList.filter((x) => !x.checked);\n            this.toastr.success(\n              'Selected employees were deleted successfully.'\n            );\n          } else {\n            this.toastr.error(\n              'Selected employees were not deleted successfully. Please try again.'\n            );\n          }\n        },\n        () => {\n          this.toastr.error('An unexpected error occured.');\n        }\n      );\n    });\n  }\n\n  checkSelectedRecords() {\n    return this.employeeList.filter((x) => x.checked).length === 0;\n  }\n\n  checkFilters() {\n    return (\n      this.filterValue.searchValue === '' &&\n      this.filterValue.sortColumn === '' &&\n      this.filterValue.sortDirection === ''\n    );\n  }\n}\n","<div class=\"container container-styles\" *ngIf=\"!loading\">\n  <h3>Employee list</h3>\n  <p>All the active employees of the company at the moment.</p>\n  <p>\n    You can search for employees either by their name, position or even their\n    skills.\n  </p>\n  <p>\n    You can either delete employees one by one by entering on their detail page\n    using the button on table or delete multple employees by selecting the ones\n    you want using the checkbox next to the First Name column and then pressing\n    Delete Selected Employees button.\n  </p>\n  <br />\n  <div class=\"text-left mb-4 mt-2\" *ngIf=\"!loading && employeeList.length > 0\">\n    {{\n      employeeList.length +\n        (employeeList.length == 1\n          ? \" employee has been found\"\n          : \" employees have been found\")\n    }}\n  </div>\n  <div>\n    <form\n      #form=\"ngForm\"\n      class=\"form-inline mb-3\"\n      (ngSubmit)=\"submitSearch()\"\n      autocomplete=\"off\"\n    >\n      <div class=\"form-group form-group-responsive\">\n        <input\n          type=\"text\"\n          class=\"form-control filter-input\"\n          name=\"minAge\"\n          placeholder=\"Search employees...\"\n          [(ngModel)]=\"filterValue.searchValue\"\n        />\n      </div>\n      <button\n        [disabled]=\"checkFilters()\"\n        type=\"button\"\n        class=\"btn btn-info filter-action form-group-button-reset-filter-responsive\"\n        (click)=\"resetFilters()\"\n      >\n        Reset Filters\n      </button>\n      <button\n        class=\"btn btn-primary filter-action form-group-button-filter-action-responsive\"\n        type=\"submit\"\n      >\n        Apply Filters\n      </button>\n      <button\n        class=\"btn btn-info employee-action form-group-button-add-action-responsive\"\n        type=\"button\"\n        [routerLink]=\"'/employees/addNewEmployee'\"\n      >\n        Add New Employee\n      </button>\n      <button\n        [disabled]=\"checkSelectedRecords()\"\n        class=\"btn btn-danger employee-action form-group-button-multiple-delete-responsive\"\n        type=\"button\"\n        (click)=\"deleteMultipleEmployees()\"\n      >\n        Delete Selected Employees\n      </button>\n    </form>\n  </div>\n  <div class=\"results-table-styles\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th></th>\n          <th scope=\"col\" (click)=\"orderBy('FirstName')\">\n            <div class=\"clickable-header-styles\">\n              <div>First Name</div>\n              <div class=\"ml-3\" *ngIf=\"filterValue.sortColumn === 'FirstName'\">\n                <i\n                  [ngClass]=\"\n                    filterValue.sortDirection === 'ASC'\n                      ? 'fa fa-sort-up'\n                      : 'fa fa-sort-desc'\n                  \"\n                  aria-hidden=\"true\"\n                ></i>\n              </div>\n            </div>\n          </th>\n          <th scope=\"col\" (click)=\"orderBy('LastName')\">\n            <div class=\"clickable-header-styles\">\n              <div>Last Name</div>\n              <div class=\"ml-3\" *ngIf=\"filterValue.sortColumn === 'LastName'\">\n                <i\n                  [ngClass]=\"\n                    filterValue.sortDirection === 'ASC'\n                      ? 'fa fa-sort-up'\n                      : 'fa fa-sort-desc'\n                  \"\n                  aria-hidden=\"true\"\n                ></i>\n              </div>\n            </div>\n          </th>\n          <th scope=\"col\" (click)=\"orderBy('HiringDate')\">\n            <div class=\"clickable-header-styles\">\n              <div>Hiring Date</div>\n              <div class=\"ml-3\" *ngIf=\"filterValue.sortColumn === 'HiringDate'\">\n                <i\n                  [ngClass]=\"\n                    filterValue.sortDirection === 'ASC'\n                      ? 'fa fa-sort-up'\n                      : 'fa fa-sort-desc'\n                  \"\n                  aria-hidden=\"true\"\n                ></i>\n              </div>\n            </div>\n          </th>\n          <th scope=\"col\" (click)=\"orderBy('JobTitle')\">\n            <div class=\"clickable-header-styles\">\n              <div>Job Title</div>\n              <div class=\"ml-3\" *ngIf=\"filterValue.sortColumn === 'JobTitle'\">\n                <i\n                  [ngClass]=\"\n                    filterValue.sortDirection === 'ASC'\n                      ? 'fa fa-sort-up'\n                      : 'fa fa-sort-desc'\n                  \"\n                  aria-hidden=\"true\"\n                ></i>\n              </div>\n            </div>\n          </th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngIf=\"employeeList.length == 0\">\n          <td class=\"text-center\" colspan=\"6\">There are no employees</td>\n        </tr>\n        <ng-container *ngIf=\"employeeList.length > 0\">\n          <tr *ngFor=\"let employee of employeeList\">\n            <td>\n              <input\n                type=\"checkbox\"\n                class=\"btn-check\"\n                [(ngModel)]=\"employee.checked\"\n              />\n            </td>\n            <td>{{ employee.firstName }}</td>\n            <td>{{ employee.lastName }}</td>\n            <td>{{ employee.hiringDate | date: \"dd/MM/YYYY\" }}</td>\n            <td>{{ employee.jobTitle }}</td>\n            <td>\n              <button\n                class=\"btn btn-primary employee-action-button\"\n                [routerLink]=\"'/employees/' + employee.employeeID\"\n              >\n                <i class=\"fa fa-edit\"></i>\n              </button>\n            </td>\n          </tr>\n        </ng-container>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"results-grid-styles\">\n    <div class=\"text-center\" *ngIf=\"employeeList.length == 0\">\n      There are no employees\n    </div>\n    <div class=\"row\" *ngIf=\"employeeList.length > 0\">\n      <div\n        class=\"col-sm-6 col-xs-12 padding-col-styles\"\n        *ngFor=\"let employee of employeeList\"\n      >\n        <div class=\"card card-list-item\">\n          <div class=\"card-header\">\n            {{ employee.firstName + \" \" + employee.lastName }}\n          </div>\n          <div class=\"card-body\">\n            <h6 class=\"card-subtitle mb-2\">{{ employee.jobTitle }}</h6>\n            <h6 class=\"card-subtitle mb-2 text-muted\">\n              Hired on {{ employee.hiringDate | date: \"dd/MM/YYYY\" }}\n            </h6>\n            <a [href]=\"'/employees/' + employee.employeeID\" class=\"card-link\"\n              >View Details</a\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}